{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TODES\\\\Desktop\\\\Programacion\\\\Ecomerce\\\\frontend\\\\src\\\\context\\\\cartContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n//  CART CONTEXT\nexport const CartContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [cart, setCart] = useState([]);\n  const total = cart.reduce((previousTotal, currentProduct) => previousTotal + currentProduct.price * currentProduct.quantity, 0);\n  const quantity = cart.reduce((previousQuantity, currentProduct) => previousQuantity + currentProduct.quantity, 0);\n  const isInCart = id => {\n    return cart.some(product => product.id === id);\n  };\n  const addItem = (product, quantity) => {\n    const qntAdded = {\n      ...product,\n      quantity\n    };\n    if (isInCart(product.id)) {\n      const cartCopy = [...cart];\n      const position = cartCopy.findIndex(item => item.id === product.id);\n      cartCopy[position] = {\n        ...cartCopy[position],\n        quantity: cartCopy[position].quantity + quantity\n      };\n      setCart(cartCopy);\n    } else {\n      setCart([...cart, qntAdded]);\n    }\n  };\n  const removeItem = product => {\n    setCart(cart.filter(itemId => itemId.id !== product.id));\n  };\n  const clearCart = () => {\n    setCart([]);\n  };\n  const value = {\n    cart: cart,\n    total: total,\n    quantity: quantity,\n    addItem: addItem,\n    removeItem: removeItem,\n    clearCart: clearCart\n  };\n  console.log(\"value\", value);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 11\n  }, this);\n};\n_s(CartContextProvider, \"ZqFaEIYkzI5UoYUmTgmqHbYYm/0=\");\n_c = CartContextProvider;\nvar _c;\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"names":["createContext","useState","CartContext","CartContextProvider","children","cart","setCart","total","reduce","previousTotal","currentProduct","price","quantity","previousQuantity","isInCart","id","some","product","addItem","qntAdded","cartCopy","position","findIndex","item","removeItem","filter","itemId","clearCart","value","console","log"],"sources":["C:/Users/TODES/Desktop/Programacion/Ecomerce/frontend/src/context/cartContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const CartContext = createContext();\r\n\r\n//  CART CONTEXT\r\nexport const CartContextProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n  const total = cart.reduce(\r\n    (previousTotal, currentProduct) =>\r\n      previousTotal + currentProduct.price * currentProduct.quantity,\r\n    0\r\n  );\r\n  const quantity = cart.reduce(\r\n    (previousQuantity, currentProduct) =>\r\n      previousQuantity + currentProduct.quantity,\r\n    0\r\n  );\r\n\r\n  const isInCart = (id) => {\r\n    return cart.some((product) => product.id === id);\r\n  };\r\n\r\n  const addItem = (product, quantity) => {\r\n    const qntAdded = { ...product, quantity };\r\n\r\n    if (isInCart(product.id)) {\r\n      const cartCopy = [...cart];\r\n      const position = cartCopy.findIndex((item) => item.id === product.id);\r\n      cartCopy[position] = {\r\n        ...cartCopy[position],\r\n        quantity: cartCopy[position].quantity + quantity,\r\n      };\r\n      setCart(cartCopy);\r\n    } else {\r\n      setCart([...cart, qntAdded]);\r\n    }\r\n  };\r\n\r\n  const removeItem = (product) => {\r\n    setCart(cart.filter((itemId) => itemId.id !== product.id));\r\n  };\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  const value = {\r\n    cart: cart,\r\n    total: total,\r\n    quantity: quantity,\r\n    addItem: addItem,\r\n    removeItem: removeItem,\r\n    clearCart: clearCart,\r\n  };\r\n\r\n  console.log(\"value\", value)\r\n  return (<CartContext.Provider value={value}>\r\n    {children}\r\n  </CartContext.Provider>);\r\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AAEhD,OAAO,MAAMC,WAAW,gBAAGF,aAAa,EAAE;;AAE1C;AACA,OAAO,MAAMG,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC9C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMM,KAAK,GAAGF,IAAI,CAACG,MAAM,CACvB,CAACC,aAAa,EAAEC,cAAc,KAC5BD,aAAa,GAAGC,cAAc,CAACC,KAAK,GAAGD,cAAc,CAACE,QAAQ,EAChE,CAAC,CACF;EACD,MAAMA,QAAQ,GAAGP,IAAI,CAACG,MAAM,CAC1B,CAACK,gBAAgB,EAAEH,cAAc,KAC/BG,gBAAgB,GAAGH,cAAc,CAACE,QAAQ,EAC5C,CAAC,CACF;EAED,MAAME,QAAQ,GAAIC,EAAE,IAAK;IACvB,OAAOV,IAAI,CAACW,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EAClD,CAAC;EAED,MAAMG,OAAO,GAAG,CAACD,OAAO,EAAEL,QAAQ,KAAK;IACrC,MAAMO,QAAQ,GAAG;MAAE,GAAGF,OAAO;MAAEL;IAAS,CAAC;IAEzC,IAAIE,QAAQ,CAACG,OAAO,CAACF,EAAE,CAAC,EAAE;MACxB,MAAMK,QAAQ,GAAG,CAAC,GAAGf,IAAI,CAAC;MAC1B,MAAMgB,QAAQ,GAAGD,QAAQ,CAACE,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKE,OAAO,CAACF,EAAE,CAAC;MACrEK,QAAQ,CAACC,QAAQ,CAAC,GAAG;QACnB,GAAGD,QAAQ,CAACC,QAAQ,CAAC;QACrBT,QAAQ,EAAEQ,QAAQ,CAACC,QAAQ,CAAC,CAACT,QAAQ,GAAGA;MAC1C,CAAC;MACDN,OAAO,CAACc,QAAQ,CAAC;IACnB,CAAC,MAAM;MACLd,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEc,QAAQ,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,MAAMK,UAAU,GAAIP,OAAO,IAAK;IAC9BX,OAAO,CAACD,IAAI,CAACoB,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACX,EAAE,KAAKE,OAAO,CAACF,EAAE,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMY,SAAS,GAAG,MAAM;IACtBrB,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;EAED,MAAMsB,KAAK,GAAG;IACZvB,IAAI,EAAEA,IAAI;IACVE,KAAK,EAAEA,KAAK;IACZK,QAAQ,EAAEA,QAAQ;IAClBM,OAAO,EAAEA,OAAO;IAChBM,UAAU,EAAEA,UAAU;IACtBG,SAAS,EAAEA;EACb,CAAC;EAEDE,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,KAAK,CAAC;EAC3B,oBAAQ,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEA,KAAM;IAAA,UACxCxB;EAAQ;IAAA;IAAA;IAAA;EAAA,QACY;AACzB,CAAC;AAAC,GAtDWD,mBAAmB;AAAA,KAAnBA,mBAAmB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}